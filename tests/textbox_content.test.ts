// Verifies the HTML output generated by the TextBoxContent class for different input conditions:
//      Non-empty, empty, and null content 
// The goal is to make sure the getContent() method behaves correctly across these different scenarios.

import { describe, it, expect } from 'vitest';
import TextBoxContent from '../public/componentHTML/content/textBoxContent';

describe('TextBoxContent', () => {
  it('should return the correct HTML content when content is provided', () => {
    const parsedTextboxData = { content: 'Hello, World!' };
    const textBoxContent = new TextBoxContent(parsedTextboxData);

    const expectedHTML = `
            <body>
                <div class="container">
                    <p class="text">
                        Hello, World!
                    </p>
                </div>
            </body>
        `;

    expect(textBoxContent.getContent()).toBe(expectedHTML);
  });

  it('should return empty content when content is not provided', () => {
    const parsedTextboxData = { content: '' };
    const textBoxContent = new TextBoxContent(parsedTextboxData);

    const expectedHTML = `
            <body>
                <div class="container">
                    <p class="text">
                        
                    </p>
                </div>
            </body>
        `;

    expect(textBoxContent.getContent()).toBe(expectedHTML);
  });

  it('should handle null content gracefully', () => {
    const parsedTextboxData = { content: null as unknown as string };
    const textBoxContent = new TextBoxContent(parsedTextboxData);

    const expectedHTML = `
            <body>
                <div class="container">
                    <p class="text">
                        
                    </p>
                </div>
            </body>
        `;

    expect(textBoxContent.getContent()).toBe(expectedHTML);
  });
});
